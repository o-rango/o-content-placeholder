/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface OContentPlaceholderBlock {
      'animation': boolean;
      'lineHeight': number;
      'lines': number;
      'margin': number;
      'randomSize': boolean;
      'rounded': boolean;
    }
  }

  interface HTMLOContentPlaceholderBlockElement extends StencilComponents.OContentPlaceholderBlock, HTMLStencilElement {}

  var HTMLOContentPlaceholderBlockElement: {
    prototype: HTMLOContentPlaceholderBlockElement;
    new (): HTMLOContentPlaceholderBlockElement;
  };
  interface HTMLElementTagNameMap {
    'o-content-placeholder-block': HTMLOContentPlaceholderBlockElement;
  }
  interface ElementTagNameMap {
    'o-content-placeholder-block': HTMLOContentPlaceholderBlockElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'o-content-placeholder-block': JSXElements.OContentPlaceholderBlockAttributes;
    }
  }
  namespace JSXElements {
    export interface OContentPlaceholderBlockAttributes extends HTMLAttributes {
      'animation'?: boolean;
      'lineHeight'?: number;
      'lines'?: number;
      'margin'?: number;
      'randomSize'?: boolean;
      'rounded'?: boolean;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface OContentPlaceholderImg {
      'animation': boolean;
      'format': 'circle' | 'square';
      'size': number;
    }
  }

  interface HTMLOContentPlaceholderImgElement extends StencilComponents.OContentPlaceholderImg, HTMLStencilElement {}

  var HTMLOContentPlaceholderImgElement: {
    prototype: HTMLOContentPlaceholderImgElement;
    new (): HTMLOContentPlaceholderImgElement;
  };
  interface HTMLElementTagNameMap {
    'o-content-placeholder-img': HTMLOContentPlaceholderImgElement;
  }
  interface ElementTagNameMap {
    'o-content-placeholder-img': HTMLOContentPlaceholderImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'o-content-placeholder-img': JSXElements.OContentPlaceholderImgAttributes;
    }
  }
  namespace JSXElements {
    export interface OContentPlaceholderImgAttributes extends HTMLAttributes {
      'animation'?: boolean;
      'format'?: 'circle' | 'square';
      'size'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;